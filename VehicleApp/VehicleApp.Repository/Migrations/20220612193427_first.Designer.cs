// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleApp.Repository.AppDbContexts;

#nullable disable

namespace VehicleApp.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220612193427_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VehicleApp.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Otomobil",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "SUV",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 3,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "ELektrikli Araçlar",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 4,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Panelvan",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 5,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Motosikler",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 6,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Deniz Araçları",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 7,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Name = "Hava Araçları",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleBrands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrandsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFeaturesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleFeaturesId")
                        .IsUnique();

                    b.ToTable("VehicleBrands");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleColors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ColorsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFeaturesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleFeaturesId")
                        .IsUnique();

                    b.ToTable("VehicleColors");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiclesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiclesId");

                    b.ToTable("VehicleFeatures");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleFuels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFeaturesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleFeaturesId")
                        .IsUnique();

                    b.ToTable("VehicleFuels");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleProductionYears", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFeaturesId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("VehicleFeaturesId")
                        .IsUnique();

                    b.ToTable("VehicleProductionYears");
                });

            modelBuilder.Entity("VehicleApp.Core.Vehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ChassisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalWebUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "3.20",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Focus",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 3,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Corolla",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 4,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Astra",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 5,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Passat",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 6,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Spark",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        },
                        new
                        {
                            Id = 7,
                            ActiveDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = 0,
                            IsActive = false,
                            IsActiveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActiveDateUpdateUserId = 0,
                            IsActiveDateUserId = 0,
                            IsDelete = false,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleteDateUpdateUserId = 0,
                            IsDeleteDateUserId = 0,
                            Model = "Egea",
                            PurchasePrice = 0m,
                            SalePrice = 0m,
                            Stock = 0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUserId = 0
                        });
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleBrands", b =>
                {
                    b.HasOne("VehicleApp.Core.VehicleFeatures", "VehicleFeatures")
                        .WithOne("VehicleBrands")
                        .HasForeignKey("VehicleApp.Core.VehicleBrands", "VehicleFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleColors", b =>
                {
                    b.HasOne("VehicleApp.Core.VehicleFeatures", "VehicleFeatures")
                        .WithOne("VehicleColors")
                        .HasForeignKey("VehicleApp.Core.VehicleColors", "VehicleFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleFeatures", b =>
                {
                    b.HasOne("VehicleApp.Core.Vehicles", "Vehicles")
                        .WithMany("VehicleFeatures")
                        .HasForeignKey("VehiclesId");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleFuels", b =>
                {
                    b.HasOne("VehicleApp.Core.VehicleFeatures", "VehicleFeatures")
                        .WithOne("VehicleFuels")
                        .HasForeignKey("VehicleApp.Core.VehicleFuels", "VehicleFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleProductionYears", b =>
                {
                    b.HasOne("VehicleApp.Core.VehicleFeatures", "VehicleFeatures")
                        .WithOne("VehicleProductionYears")
                        .HasForeignKey("VehicleApp.Core.VehicleProductionYears", "VehicleFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("VehicleApp.Core.Vehicles", b =>
                {
                    b.HasOne("VehicleApp.Core.Category", "Category")
                        .WithMany("Vehicles")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VehicleApp.Core.Category", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleApp.Core.VehicleFeatures", b =>
                {
                    b.Navigation("VehicleBrands");

                    b.Navigation("VehicleColors");

                    b.Navigation("VehicleFuels");

                    b.Navigation("VehicleProductionYears");
                });

            modelBuilder.Entity("VehicleApp.Core.Vehicles", b =>
                {
                    b.Navigation("VehicleFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
